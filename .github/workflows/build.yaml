name: Build

on:
  workflow_dispatch:
    inputs:
      architecture:
        description: "Target CPU architecture"
        required: true
        default: x64
        type: choice
        options:
          - x64
          - arm64

      release_type:
        description: "WSA release type"
        required: true
        default: RP
        type: choice
        options:
          - retail
          - release preview
          - insider slow
          - insider fast

      magisk_version:
        description: "Magisk channel"
        required: true
        default: stable
        type: choice
        options:
          - stable
          - beta
          - canary
          - debug

      google_apps_brand:
        description: "Google apps brand"
        required: true
        default: MindTheGapps
        type: choice
        options:
          - none
          - MindTheGapps
          - OpenGApps

      google_apps_variant:
        description: "Google apps variant"
        required: true
        default: pico
        type: choice
        options:
          - pico

      remove_amazon:
        description: "Remove Amazon Store"
        required: true
        default: false
        type: boolean

      root_solution:
        description: "Root solution"
        required: true
        default: magisk
        type: choice
        options:
          - magisk
          - kernelsu
          - none

  workflow_call:
    inputs:
      architecture:
        required: false
        default: x64
        type: string

      release_type:
        required: false
        default: release preview
        type: string

      magisk_version:
        required: false
        default: stable
        type: string

      google_apps_brand:
        required: false
        default: MindTheGapps
        type: string

      google_apps_variant:
        required: false
        default: pico
        type: string

      remove_amazon:
        required: false
        default: false
        type: boolean

      root_solution:
        required: false
        default: magisk
        type: string

env:
  WSA_BUILD_ARCHITECTURE: ${{ inputs.architecture }}
  WSA_BUILD_RELEASE_TYPE: ${{ inputs.release_type }}
  WSA_BUILD_MAGISK_VERSION: ${{ inputs.magisk_version }}
  WSA_BUILD_GOOGLE_APPS_BRAND: ${{ inputs.google_apps_brand }}
  WSA_BUILD_GOOGLE_APPS_VARIANT: ${{ inputs.google_apps_variant }}
  WSA_BUILD_REMOVE_AMAZON: ${{ inputs.remove_amazon }}
  WSA_BUILD_ROOT_SOLUTION: ${{ inputs.root_solution }}

jobs:
  build-magisk-on-wsa:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # - name: Open reverse SSH
      #   run: bash ./github_actions_reverse_ssh.sh

      - name: Updating package manager cache
        run: sudo apt update -y

      - name: Installing dependencies
        run: sudo bash ./install_requirements.sh

      - name: Building Magisk on WSA
        run: bash ./build_wsa.sh

      - name: Archiving and compressing artifact
        run: |
          cd MagiskOnWSALocal/output
          tar -I "xz -T$(nproc) -9" -cvf ../MagiskOnWSA.tar.xz .
          cd ../..

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: MagiskOnWSA.tar.xz
          path: MagiskOnWSALocal/MagiskOnWSA.tar.xz

  build-wsa-patch:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Updating package manager cache
        run: sudo apt update -y

      - name: Installing dependencies
        run: sudo apt install p7zip

      - name: Downloading and extracing WSAPatch release files
        run: |
          cd WSAPatch
          bash download.sh file_list.csv
          7z e release.7z
          cd ..

      - name: Archiving and compressing artifact
        run: |
          cd WSAPatch
          tar -I "xz -T$(nproc) -9" -cvf ../WSAPatch.tar.xz *.dll
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: WSAPatch.tar.xz
          path: WSAPatch.tar.xz

  build-magisk-on-wsa-10:
    needs:
      - build-wsa-patch
      - build-magisk-on-wsa
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Extracing files
        run: |
          cd artifacts

          for name in *;
          do
              mv $name/$name ../$name;
              rmdir $name
              mv ../$name ./
          done;

          tar -xJvf WSAPatch.tar.xz
          rm WSAPatch.tar.xz
          tar -xJvf MagiskOnWSA.tar.xz
          rm MagiskOnWSA.tar.xz

          cd ..

      - name: Applying patch for Windows 10
        run: |
          cd artifacts
          mv *.dll */WsaClient/
          patch --binary */AppxManifest.xml ../wsa_windows_10.patch
          cd ..

      - name: Archiving and compressing artifact
        run: |
          cd artifacts
          tar -I "xz -T$(nproc) -9" -cvf ../MagiskOnWSA10.tar.xz .
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: MagiskOnWSA10.tar.xz
          path: MagiskOnWSA10.tar.xz
